name: CI

on: [push, pull_request]

jobs:

  build-windows-docker:
    runs-on: windows-2022
    env:
      VS_VERSION: ${{ (matrix.os == 'windows-2019' && '2019' || (matrix.os == 'windows-2022' && '2022' || '')) }}

    strategy:
      fail-fast: false
      matrix:
        platform: [x64, x86]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 10

      - name: Build
        id: build
        shell: cmd
        env:
          PLATFORM: ${{ matrix.platform }}
        run: |
          echo ::set-output name=arch_suffix::%PLATFORM%
          mkdir builds\install_images
          cd builds\docker\windows
          call build.bat
          call run.bat C:\fbscripts\build-%PLATFORM%.bat

      - name: Upload zip
        uses: actions/upload-artifact@main
        with:
          name: firebird-windows-${{ matrix.platform }}-zip
          path: builds/install_images/Firebird-*-windows-${{ matrix.platform }}.zip

      - name: Upload zip (withDebugSymbols)
        uses: actions/upload-artifact@main
        with:
          name: firebird-windows-${{ matrix.platform }}-withDebugSymbols-zip
          path: builds/install_images/Firebird-*-windows-${{ matrix.platform }}-withDebugSymbols.zip

      - name: Upload installer
        uses: actions/upload-artifact@main
        with:
          name: firebird-windows-${{ matrix.platform }}-installer
          path: builds/install_images/*-windows-${{ matrix.platform }}.exe

      - name: Upload installer (withDebugSymbols)
        uses: actions/upload-artifact@main
        with:
          name: firebird-windows-${{ matrix.platform }}-withDebugSymbols-installer
          path: builds/install_images/*-windows-${{ matrix.platform }}-withDebugSymbols.exe

      - name: Snapshot - prepare
        id: snapshot_prepare
        if: |
          github.repository == 'FirebirdSQL/firebird' &&
          github.event.head_commit.message == 'increment build number' &&
          github.ref_name == 'master'
        shell: cmd
        run: |
          echo ::set-output name=snapshot_name::${{ github.ref_name }}

      - name: Snapshot - delete old assets
        uses: asfernandes/delete-release-assets@v2
        if: steps.snapshot_prepare.outputs.snapshot_name
        with:
          repository: FirebirdSQL/snapshots
          token: ${{ secrets.SNAPSHOT_RELEASE_TOKEN }}
          tag: snapshot-${{ steps.snapshot_prepare.outputs.snapshot_name }}
          fail-if-no-release: false
          fail-if-no-assets: false
          assets: |
            Firebird-*-windows-${{ steps.build.outputs.arch_suffix }}*.exe
            Firebird-*-windows-${{ steps.build.outputs.arch_suffix }}*.zip

      - name: Snapshot - release
        id: snapshot_release_try1
        uses: softprops/action-gh-release@v1
        if: steps.snapshot_prepare.outputs.snapshot_name
        continue-on-error: true
        with:
          repository: FirebirdSQL/snapshots
          name: Latest snapshots for ${{ steps.snapshot_prepare.outputs.snapshot_name }}
          tag_name: snapshot-${{ steps.snapshot_prepare.outputs.snapshot_name }}
          prerelease: true
          token: ${{ secrets.SNAPSHOT_RELEASE_TOKEN }}
          files: |
            builds/install_images/Firebird-*-windows-*.exe
            builds/install_images/Firebird-*-windows-*.zip

      - name: Snapshot - release (retry)
        uses: softprops/action-gh-release@v1
        if: |
          steps.snapshot_prepare.outputs.snapshot_name &&
          steps.snapshot_release_try1.outcome == 'failure'
        with:
          repository: FirebirdSQL/snapshots
          name: Latest snapshots for ${{ steps.snapshot_prepare.outputs.snapshot_name }}
          tag_name: snapshot-${{ steps.snapshot_prepare.outputs.snapshot_name }}
          prerelease: true
          token: ${{ secrets.SNAPSHOT_RELEASE_TOKEN }}
          files: |
            builds/install_images/Firebird-*windows-*.exe
            builds/install_images/Firebird-*windows-*.zip
