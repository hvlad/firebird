image:
  - Visual Studio 2017
  - Ubuntu1804
  - Visual Studio 2015

platform:
  - x64
  - x86

for:
-
  matrix:
    only:
      - image: Visual Studio 2015
  only_commits:
    message: /increment build number/
-
  matrix:
    only:
      - platform: x86
  only_commits:
    message: /increment build number/

shallow_clone: true

install:
  - cmd: for /r %%i in (*.bat) do unix2dos "%%i"
  - cmd: if "%PLATFORM%" == "x64" set FB_PROCESSOR_ARCHITECTURE=AMD64
  - cmd: if "%PLATFORM%" == "x64" set FB_OUTPUT_SUFFIX=x64
  - cmd: if "%PLATFORM%" == "x64" set FB_VS_ARCH=amd64
  - cmd: if "%PLATFORM%" == "x86" set FB_PROCESSOR_ARCHITECTURE=x86
  - cmd: if "%PLATFORM%" == "x86" set FB_OUTPUT_SUFFIX=win32
  - cmd: if "%PLATFORM%" == "x86" set FB_VS_ARCH=x86
  - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2017" call "%ProgramFiles(x86)%\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat" -arch=%FB_VS_ARCH%
  - cmd: if "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2015" call "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %FB_VS_ARCH%
  - cmd: cd builds\win32
  - cmd: run_all.bat JUSTBUILD
  - cmd: set ARTIFACTS_PATH=output_%FB_OUTPUT_SUFFIX%
  - sh: export APT_PACKAGES="libtool-bin"
  - sh: if [ $PLATFORM = "x64" ]; then export APT_PACKAGES="$APT_PACKAGES libtommath1 libtommath-dev libicu-dev zlib1g-dev"; fi
  - sh: if [ $PLATFORM = "x86" ]; then export APT_PACKAGES="$APT_PACKAGES gcc-multilib g++-multilib libncurses5-dev:i386 libtommath-dev:i386 libicu-dev:i386 zlib1g-dev:i386"; fi
  - sh: if [ $PLATFORM = "x64" ]; then export CC="gcc" CXX="g++"; fi
  - sh: if [ $PLATFORM = "x86" ]; then export CC="gcc -m32" CXX="g++ -m32"; fi
  - sh: if [ $PLATFORM = "x86" ]; then export BUILD_FLAG=--build=i386-pc-linux-gnu; fi
  - sh: sudo apt-get -y update
  - sh: sudo apt-get -y install $APT_PACKAGES
  - sh: find . -type f -iname "*.sh" -exec chmod +x {} \;
  - sh: ./autogen.sh --enable-binreloc --with-builtin-tomcrypt --prefix=/opt/firebird $BUILD_FLAG
  - sh: make -j4
  - sh: make dist
  - sh: (mkdir output; tar xzvf gen/Firebird-[0-9]*.tar.gz -C output)
  - sh: (cd output/Firebird-[0-9]*; sudo ./install.sh -silent)
  - sh: export ARTIFACTS_PATH=`find gen/Firebird-[0-9]*.tar.gz`

artifacts:
  - path: $(ARTIFACTS_PATH)
    name: output
    type: zip

build: off
test: off
deploy: off
